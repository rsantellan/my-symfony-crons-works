<?php

/**
 * actividades
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    jardin
 * @subpackage model
 * @author     Gaston Caldeiro
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class actividades extends Baseactividades
{
  public function __toString() 
  {
    return $this->getNombre();
  }
  
  public function retrieveCosto()
  {
    return number_format($this->getCosto(), '2', '.', '');
  }
  
  public static function getOtherActividades($usuario_id)
  {
    $query = Doctrine_Query::create()
    ->select('a.*')
    ->from('actividades a')
    ->where('NOT EXISTS (SELECT u.usuario_id FROM usuario_actividades AS u WHERE u.usuario_id = ' . $usuario_id . ' AND a.id = u.actividad_id)');
    
    return $query->execute();
  }
  
  public function preSave($event)
  {
    if($this->getMdNewsLetterGroupId() == NULL)
    {
      $mdNewsLetterGroup = new mdNewsLetterGroup();
      $mdNewsLetterGroup->setName($this->getNombre());
      $mdNewsLetterGroup->save();
      
      $this->setMdNewsLetterGroupId($mdNewsLetterGroup->getId());
    }else{
      
      $mdNewsLetterGroup = $this->getMdNewsLetterGroup();
      $mdNewsLetterGroup->setName($this->getNombre());
      $mdNewsLetterGroup->save();
      
    }

  }
  
  public function postDelete($event) 
  {
    if($this->getMdNewsLetterGroupId() != NULL){
      $mdNewsLetterGroup = $this->getMdNewsLetterGroup();
      $mdNewsLetterGroup->delete();
    }
	accountsHandler::generateMonthBilling(date('n'), date('Y'));
  }
  
  public function postSave($event) {
	parent::postSave($event);
	accountsHandler::generateMonthBilling(date('n'), date('Y'));
  }

  public function postUpdate($event) {
	parent::postUpdate($event);
	accountsHandler::generateMonthBilling(date('n'), date('Y'));
  }

  
}
