<?php

/**
 * BasemdUserProfile
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $last_name
 * @property string $city
 * @property string $country_code
 * 
 * @method integer       getId()           Returns the current record's "id" value
 * @method string        getName()         Returns the current record's "name" value
 * @method string        getLastName()     Returns the current record's "last_name" value
 * @method string        getCity()         Returns the current record's "city" value
 * @method string        getCountryCode()  Returns the current record's "country_code" value
 * @method mdUserProfile setId()           Sets the current record's "id" value
 * @method mdUserProfile setName()         Sets the current record's "name" value
 * @method mdUserProfile setLastName()     Sets the current record's "last_name" value
 * @method mdUserProfile setCity()         Sets the current record's "city" value
 * @method mdUserProfile setCountryCode()  Sets the current record's "country_code" value
 * 
 * @package    jardin
 * @subpackage model
 * @author     Rodrigo Santellan
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasemdUserProfile extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('md_user_profile');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('last_name', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('city', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('country_code', 'string', 2, array(
             'type' => 'string',
             'default' => 'UY',
             'length' => 2,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $mdcontentbehavior0 = new MdContentBehavior();
        $this->actAs($mdcontentbehavior0);
    }
}