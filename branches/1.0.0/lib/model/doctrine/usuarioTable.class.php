<?php

/**
 * usuarioTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class usuarioTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object usuarioTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('usuario');
    }
    
    public function getDeudores($mes, $anio)
    {
      return Doctrine_Query::create()
        ->select('u.*')
        ->from('usuario u')
        ->where('u.egresado =?', false)
        ->andWhere('NOT EXISTS (SELECT p.usuario_id FROM pagos AS p WHERE mes = ' . $mes . ' AND YEAR(fecha) = ' . $anio . ' AND u.id = p.usuario_id)')
        ->andWhere('NOT EXISTS (SELECT e.usuario_id FROM exoneracion AS e WHERE mes = ' . $mes . ' AND u.id = e.usuario_id)')
        ->orderBy('u.referencia_bancaria ASC, u.apellido ASC, u.nombre ASC')
        ->execute();
      
      /*$q = Doctrine_Manager::getInstance()->getCurrentConnection();
      return $q->execute(
        'select u.* from usuario u where NOT EXISTS (SELECT p.usuario_id FROM pagos AS p WHERE MONTH(fecha) = ' . $mes . ' AND YEAR(fecha) = ' . $anio . ' AND p.tipo = "mensual" AND u.id = p.usuario_id)' . 
        'union select u.* from usuario u where NOT EXISTS (SELECT p.usuario_id FROM pagos AS p WHERE MONTH(fecha) = ' . $mes . ' AND YEAR(fecha) = ' . $anio . ' AND p.tipo = "matricula" AND u.id = p.usuario_id)' . 
        'union select u.* from usuario u where NOT EXISTS (SELECT p.usuario_id FROM pagos AS p WHERE MONTH(fecha) = ' . $mes . ' AND YEAR(fecha) = ' . $anio . ' AND p.tipo = "summercamp" AND u.id = p.usuario_id)'
        )->fetchAll();*/
    }
    
    public function getWithoutParents($egresado = false)
    {
      
      return $this->createQuery('q')->where('q.egresado = ?', $egresado)->andWhere('id not in (select usuario_id from usuario_progenitor)')->execute();
    }
    
    public function retrieveAllActiveStudents()
    {
        return $this
                    ->createQuery('q')
                    ->addWhere('q.egresado = 0')
                    ->addWhere('q.anio_ingreso <= ?', date('Y'))
                    ->execute();
    }
    
    public function getMailsPadres()
    {
      $response = Doctrine_Query::create()
        ->select('u.mail_padres as mail_padres')
        ->from('usuario u')
        ->where('u.egresado = 0')
        ->execute(array(), Doctrine_Core::HYDRATE_ARRAY);
      
      $return = array();
      foreach($response as $data)
      {
        $info = explode(',', $data['mail_padres']);
        foreach($info as $mail)
        {
          if(trim($mail) != "")
            $return[] = trim($mail);
        }
      }
      
      $mails_padres = array_unique($return);
      return $mails_padres;
    }
    
    public function addDefaultsFilter(Doctrine_Query $q)
    {
        $q->addWhere($q->getRootAlias() . '.egresado = ?', false);
        return $q;        
    }
    
    public function addCorrienteFilter(Doctrine_Query $q)
    {
        $q->addWhere($q->getRootAlias() . '.egresado = ?', false);
        $q->addWhere($q->getRootAlias() . '.anio_ingreso <= ?', date('Y'));
        return $q;        
    }
    
    public function addFuturosFilter(Doctrine_Query $q)
    {
        $q->addWhere($q->getRootAlias() . '.anio_ingreso > ?', date('Y'));
        return $q;        
    }
    
    public function addEgresadoFilter(Doctrine_Query $q)
    {
        $q->addWhere($q->getRootAlias() . '.egresado = ?', true);
        return $q;        
    }
    
}
