<?php

/**
 * BasemdNewsletterContent
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $subject
 * @property blob $body
 * @property integer $send_counter
 * @property Doctrine_Collection $mdNewsletterContentSended
 * 
 * @method integer             getId()                        Returns the current record's "id" value
 * @method string              getSubject()                   Returns the current record's "subject" value
 * @method blob                getBody()                      Returns the current record's "body" value
 * @method integer             getSendCounter()               Returns the current record's "send_counter" value
 * @method Doctrine_Collection getMdNewsletterContentSended() Returns the current record's "mdNewsletterContentSended" collection
 * @method mdNewsletterContent setId()                        Sets the current record's "id" value
 * @method mdNewsletterContent setSubject()                   Sets the current record's "subject" value
 * @method mdNewsletterContent setBody()                      Sets the current record's "body" value
 * @method mdNewsletterContent setSendCounter()               Sets the current record's "send_counter" value
 * @method mdNewsletterContent setMdNewsletterContentSended() Sets the current record's "mdNewsletterContentSended" collection
 * 
 * @package    jardin
 * @subpackage model
 * @author     Rodrigo Santellan
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasemdNewsletterContent extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('md_newsletter_content');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('subject', 'string', 256, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 256,
             ));
        $this->hasColumn('body', 'blob', null, array(
             'type' => 'blob',
             'notnull' => true,
             ));
        $this->hasColumn('send_counter', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('mdNewsletterContentSended', array(
             'local' => 'id',
             'foreign' => 'md_newsletter_content_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}