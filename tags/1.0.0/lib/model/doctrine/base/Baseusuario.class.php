<?php

/**
 * Baseusuario
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $nombre
 * @property string $apellido
 * @property timestamp $fecha_nacimiento
 * @property integer $anio_ingreso
 * @property string $sociedad
 * @property string $referencia_bancaria
 * @property string $emergencia_medica
 * @property enum $horario
 * @property string $futuro_colegio
 * @property integer $descuento
 * @property enum $clase
 * @property boolean $egresado
 * @property integer $billetera_id
 * @property Doctrine_Collection $actividades
 * @property billetera $billetera
 * @property Doctrine_Collection $progenitores
 * @property Doctrine_Collection $usuario_progenitor
 * @property Doctrine_Collection $usuario_actividades
 * @property Doctrine_Collection $hermanos
 * @property Doctrine_Collection $pagos
 * @property Doctrine_Collection $exoneracion
 * @property Doctrine_Collection $cuentausuario
 * @property Doctrine_Collection $facturaUsuario
 * 
 * @method integer             getId()                  Returns the current record's "id" value
 * @method string              getNombre()              Returns the current record's "nombre" value
 * @method string              getApellido()            Returns the current record's "apellido" value
 * @method timestamp           getFechaNacimiento()     Returns the current record's "fecha_nacimiento" value
 * @method integer             getAnioIngreso()         Returns the current record's "anio_ingreso" value
 * @method string              getSociedad()            Returns the current record's "sociedad" value
 * @method string              getReferenciaBancaria()  Returns the current record's "referencia_bancaria" value
 * @method string              getEmergenciaMedica()    Returns the current record's "emergencia_medica" value
 * @method enum                getHorario()             Returns the current record's "horario" value
 * @method string              getFuturoColegio()       Returns the current record's "futuro_colegio" value
 * @method integer             getDescuento()           Returns the current record's "descuento" value
 * @method enum                getClase()               Returns the current record's "clase" value
 * @method boolean             getEgresado()            Returns the current record's "egresado" value
 * @method integer             getBilleteraId()         Returns the current record's "billetera_id" value
 * @method Doctrine_Collection getActividades()         Returns the current record's "actividades" collection
 * @method billetera           getBilletera()           Returns the current record's "billetera" value
 * @method Doctrine_Collection getProgenitores()        Returns the current record's "progenitores" collection
 * @method Doctrine_Collection getUsuarioProgenitor()   Returns the current record's "usuario_progenitor" collection
 * @method Doctrine_Collection getUsuarioActividades()  Returns the current record's "usuario_actividades" collection
 * @method Doctrine_Collection getHermanos()            Returns the current record's "hermanos" collection
 * @method Doctrine_Collection getPagos()               Returns the current record's "pagos" collection
 * @method Doctrine_Collection getExoneracion()         Returns the current record's "exoneracion" collection
 * @method Doctrine_Collection getCuentausuario()       Returns the current record's "cuentausuario" collection
 * @method Doctrine_Collection getFacturaUsuario()      Returns the current record's "facturaUsuario" collection
 * @method usuario             setId()                  Sets the current record's "id" value
 * @method usuario             setNombre()              Sets the current record's "nombre" value
 * @method usuario             setApellido()            Sets the current record's "apellido" value
 * @method usuario             setFechaNacimiento()     Sets the current record's "fecha_nacimiento" value
 * @method usuario             setAnioIngreso()         Sets the current record's "anio_ingreso" value
 * @method usuario             setSociedad()            Sets the current record's "sociedad" value
 * @method usuario             setReferenciaBancaria()  Sets the current record's "referencia_bancaria" value
 * @method usuario             setEmergenciaMedica()    Sets the current record's "emergencia_medica" value
 * @method usuario             setHorario()             Sets the current record's "horario" value
 * @method usuario             setFuturoColegio()       Sets the current record's "futuro_colegio" value
 * @method usuario             setDescuento()           Sets the current record's "descuento" value
 * @method usuario             setClase()               Sets the current record's "clase" value
 * @method usuario             setEgresado()            Sets the current record's "egresado" value
 * @method usuario             setBilleteraId()         Sets the current record's "billetera_id" value
 * @method usuario             setActividades()         Sets the current record's "actividades" collection
 * @method usuario             setBilletera()           Sets the current record's "billetera" value
 * @method usuario             setProgenitores()        Sets the current record's "progenitores" collection
 * @method usuario             setUsuarioProgenitor()   Sets the current record's "usuario_progenitor" collection
 * @method usuario             setUsuarioActividades()  Sets the current record's "usuario_actividades" collection
 * @method usuario             setHermanos()            Sets the current record's "hermanos" collection
 * @method usuario             setPagos()               Sets the current record's "pagos" collection
 * @method usuario             setExoneracion()         Sets the current record's "exoneracion" collection
 * @method usuario             setCuentausuario()       Sets the current record's "cuentausuario" collection
 * @method usuario             setFacturaUsuario()      Sets the current record's "facturaUsuario" collection
 * 
 * @package    jardin
 * @subpackage model
 * @author     Rodrigo Santellan
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Baseusuario extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('usuario');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('nombre', 'string', 64, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 64,
             ));
        $this->hasColumn('apellido', 'string', 64, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 64,
             ));
        $this->hasColumn('fecha_nacimiento', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => false,
             ));
        $this->hasColumn('anio_ingreso', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('sociedad', 'string', 64, array(
             'type' => 'string',
             'length' => 64,
             ));
        $this->hasColumn('referencia_bancaria', 'string', 64, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 64,
             ));
        $this->hasColumn('emergencia_medica', 'string', 64, array(
             'type' => 'string',
             'length' => 64,
             ));
        $this->hasColumn('horario', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'matutino',
              1 => 'vespertino',
              2 => 'doble_horario',
             ),
             ));
        $this->hasColumn('futuro_colegio', 'string', 64, array(
             'type' => 'string',
             'length' => 64,
             ));
        $this->hasColumn('descuento', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('clase', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'verde',
              1 => 'amarillo',
              2 => 'rojo',
             ),
             'notnull' => false,
             ));
        $this->hasColumn('egresado', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('billetera_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('actividades', array(
             'refClass' => 'usuario_actividades',
             'local' => 'usuario_id',
             'foreign' => 'actividad_id'));

        $this->hasOne('billetera', array(
             'local' => 'billetera_id',
             'foreign' => 'id'));

        $this->hasMany('progenitor as progenitores', array(
             'refClass' => 'usuario_progenitor',
             'local' => 'usuario_id',
             'foreign' => 'progenitor_id'));

        $this->hasMany('usuario_progenitor', array(
             'local' => 'id',
             'foreign' => 'usuario_id'));

        $this->hasMany('usuario_actividades', array(
             'local' => 'id',
             'foreign' => 'usuario_id'));

        $this->hasMany('hermanos', array(
             'local' => 'id',
             'foreign' => 'usuario_from'));

        $this->hasMany('pagos', array(
             'local' => 'id',
             'foreign' => 'usuario_id'));

        $this->hasMany('exoneracion', array(
             'local' => 'id',
             'foreign' => 'usuario_id'));

        $this->hasMany('cuentausuario', array(
             'local' => 'id',
             'foreign' => 'usuario_id'));

        $this->hasMany('facturaUsuario', array(
             'local' => 'id',
             'foreign' => 'usuario_id'));
    }
}