<?php

/**
 * BasemdUserSearch
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $md_user_id
 * @property string $email
 * @property string $username
 * @property string $name
 * @property string $last_name
 * @property string $country_code
 * @property string $avatar_src
 * @property boolean $active
 * @property boolean $blocked
 * @property boolean $admin
 * @property boolean $show_email
 * @property mdUser $mdUser
 * 
 * @method integer      getMdUserId()     Returns the current record's "md_user_id" value
 * @method string       getEmail()        Returns the current record's "email" value
 * @method string       getUsername()     Returns the current record's "username" value
 * @method string       getName()         Returns the current record's "name" value
 * @method string       getLastName()     Returns the current record's "last_name" value
 * @method string       getCountryCode()  Returns the current record's "country_code" value
 * @method string       getAvatarSrc()    Returns the current record's "avatar_src" value
 * @method boolean      getActive()       Returns the current record's "active" value
 * @method boolean      getBlocked()      Returns the current record's "blocked" value
 * @method boolean      getAdmin()        Returns the current record's "admin" value
 * @method boolean      getShowEmail()    Returns the current record's "show_email" value
 * @method mdUser       getMdUser()       Returns the current record's "mdUser" value
 * @method mdUserSearch setMdUserId()     Sets the current record's "md_user_id" value
 * @method mdUserSearch setEmail()        Sets the current record's "email" value
 * @method mdUserSearch setUsername()     Sets the current record's "username" value
 * @method mdUserSearch setName()         Sets the current record's "name" value
 * @method mdUserSearch setLastName()     Sets the current record's "last_name" value
 * @method mdUserSearch setCountryCode()  Sets the current record's "country_code" value
 * @method mdUserSearch setAvatarSrc()    Sets the current record's "avatar_src" value
 * @method mdUserSearch setActive()       Sets the current record's "active" value
 * @method mdUserSearch setBlocked()      Sets the current record's "blocked" value
 * @method mdUserSearch setAdmin()        Sets the current record's "admin" value
 * @method mdUserSearch setShowEmail()    Sets the current record's "show_email" value
 * @method mdUserSearch setMdUser()       Sets the current record's "mdUser" value
 * 
 * @package    jardin
 * @subpackage model
 * @author     Rodrigo Santellan
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasemdUserSearch extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('md_user_search');
        $this->hasColumn('md_user_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('email', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('username', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('name', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('last_name', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('country_code', 'string', 2, array(
             'type' => 'string',
             'length' => 2,
             ));
        $this->hasColumn('avatar_src', 'string', 256, array(
             'type' => 'string',
             'length' => 256,
             ));
        $this->hasColumn('active', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('blocked', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('admin', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('show_email', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));


        $this->index('username_index', array(
             'fields' => 
             array(
              0 => 'username',
             ),
             ));
        $this->index('email_index', array(
             'fields' => 
             array(
              0 => 'email',
             ),
             ));
        $this->index('last_name_index', array(
             'fields' => 
             array(
              0 => 'last_name',
             ),
             ));
        $this->index('name_index', array(
             'fields' => 
             array(
              0 => 'name',
             ),
             ));
        $this->option('symfony', array(
             'form' => false,
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('mdUser', array(
             'local' => 'md_user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}